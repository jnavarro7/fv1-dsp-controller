ARM GAS  C:\Users\jn\AppData\Local\Temp\ccHhCWs4.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"Clock_1.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.Clock_1_Start,"ax",%progbits
  18              		.align	2
  19              		.global	Clock_1_Start
  20              		.code	16
  21              		.thumb_func
  22              		.type	Clock_1_Start, %function
  23              	Clock_1_Start:
  24              	.LFB0:
  25              		.file 1 "Generated_Source\\PSoC4\\Clock_1.c"
   1:Generated_Source\PSoC4/Clock_1.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/Clock_1.c **** * File Name: Clock_1.c
   3:Generated_Source\PSoC4/Clock_1.c **** * Version 2.20
   4:Generated_Source\PSoC4/Clock_1.c **** *
   5:Generated_Source\PSoC4/Clock_1.c **** *  Description:
   6:Generated_Source\PSoC4/Clock_1.c **** *   Provides system API for the clocking, interrupts and watchdog timer.
   7:Generated_Source\PSoC4/Clock_1.c **** *
   8:Generated_Source\PSoC4/Clock_1.c **** *  Note:
   9:Generated_Source\PSoC4/Clock_1.c **** *   Documentation of the API's in this file is located in the
  10:Generated_Source\PSoC4/Clock_1.c **** *   System Reference Guide provided with PSoC Creator.
  11:Generated_Source\PSoC4/Clock_1.c **** *
  12:Generated_Source\PSoC4/Clock_1.c **** ********************************************************************************
  13:Generated_Source\PSoC4/Clock_1.c **** * Copyright 2008-2012, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/Clock_1.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/Clock_1.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/Clock_1.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/Clock_1.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/Clock_1.c **** 
  19:Generated_Source\PSoC4/Clock_1.c **** #include <cydevice_trm.h>
  20:Generated_Source\PSoC4/Clock_1.c **** #include "Clock_1.h"
  21:Generated_Source\PSoC4/Clock_1.c **** 
  22:Generated_Source\PSoC4/Clock_1.c **** #if defined CYREG_PERI_DIV_CMD
  23:Generated_Source\PSoC4/Clock_1.c **** 
  24:Generated_Source\PSoC4/Clock_1.c **** /*******************************************************************************
  25:Generated_Source\PSoC4/Clock_1.c **** * Function Name: Clock_1_StartEx
  26:Generated_Source\PSoC4/Clock_1.c **** ********************************************************************************
  27:Generated_Source\PSoC4/Clock_1.c **** *
  28:Generated_Source\PSoC4/Clock_1.c **** * Summary:
  29:Generated_Source\PSoC4/Clock_1.c **** *  Starts the clock, aligned to the specified running clock.
  30:Generated_Source\PSoC4/Clock_1.c **** *
  31:Generated_Source\PSoC4/Clock_1.c **** * Parameters:
  32:Generated_Source\PSoC4/Clock_1.c **** *  alignClkDiv:  The divider to which phase alignment is performed when the
ARM GAS  C:\Users\jn\AppData\Local\Temp\ccHhCWs4.s 			page 2


  33:Generated_Source\PSoC4/Clock_1.c **** *    clock is started.
  34:Generated_Source\PSoC4/Clock_1.c **** *
  35:Generated_Source\PSoC4/Clock_1.c **** * Returns:
  36:Generated_Source\PSoC4/Clock_1.c **** *  None
  37:Generated_Source\PSoC4/Clock_1.c **** *
  38:Generated_Source\PSoC4/Clock_1.c **** *******************************************************************************/
  39:Generated_Source\PSoC4/Clock_1.c **** void Clock_1_StartEx(uint32 alignClkDiv)
  40:Generated_Source\PSoC4/Clock_1.c **** {
  41:Generated_Source\PSoC4/Clock_1.c ****     /* Make sure any previous start command has finished. */
  42:Generated_Source\PSoC4/Clock_1.c ****     while((Clock_1_CMD_REG & Clock_1_CMD_ENABLE_MASK) != 0u)
  43:Generated_Source\PSoC4/Clock_1.c ****     {
  44:Generated_Source\PSoC4/Clock_1.c ****     }
  45:Generated_Source\PSoC4/Clock_1.c ****     
  46:Generated_Source\PSoC4/Clock_1.c ****     /* Specify the target divider and it's alignment divider, and enable. */
  47:Generated_Source\PSoC4/Clock_1.c ****     Clock_1_CMD_REG =
  48:Generated_Source\PSoC4/Clock_1.c ****         ((uint32)Clock_1__DIV_ID << Clock_1_CMD_DIV_SHIFT)|
  49:Generated_Source\PSoC4/Clock_1.c ****         (alignClkDiv << Clock_1_CMD_PA_DIV_SHIFT) |
  50:Generated_Source\PSoC4/Clock_1.c ****         (uint32)Clock_1_CMD_ENABLE_MASK;
  51:Generated_Source\PSoC4/Clock_1.c **** }
  52:Generated_Source\PSoC4/Clock_1.c **** 
  53:Generated_Source\PSoC4/Clock_1.c **** #else
  54:Generated_Source\PSoC4/Clock_1.c **** 
  55:Generated_Source\PSoC4/Clock_1.c **** /*******************************************************************************
  56:Generated_Source\PSoC4/Clock_1.c **** * Function Name: Clock_1_Start
  57:Generated_Source\PSoC4/Clock_1.c **** ********************************************************************************
  58:Generated_Source\PSoC4/Clock_1.c **** *
  59:Generated_Source\PSoC4/Clock_1.c **** * Summary:
  60:Generated_Source\PSoC4/Clock_1.c **** *  Starts the clock.
  61:Generated_Source\PSoC4/Clock_1.c **** *
  62:Generated_Source\PSoC4/Clock_1.c **** * Parameters:
  63:Generated_Source\PSoC4/Clock_1.c **** *  None
  64:Generated_Source\PSoC4/Clock_1.c **** *
  65:Generated_Source\PSoC4/Clock_1.c **** * Returns:
  66:Generated_Source\PSoC4/Clock_1.c **** *  None
  67:Generated_Source\PSoC4/Clock_1.c **** *
  68:Generated_Source\PSoC4/Clock_1.c **** *******************************************************************************/
  69:Generated_Source\PSoC4/Clock_1.c **** 
  70:Generated_Source\PSoC4/Clock_1.c **** void Clock_1_Start(void)
  71:Generated_Source\PSoC4/Clock_1.c **** {
  26              		.loc 1 71 0
  27              		.cfi_startproc
  28 0000 80B5     		push	{r7, lr}
  29              		.cfi_def_cfa_offset 8
  30              		.cfi_offset 7, -8
  31              		.cfi_offset 14, -4
  32 0002 00AF     		add	r7, sp, #0
  33              		.cfi_def_cfa_register 7
  72:Generated_Source\PSoC4/Clock_1.c ****     /* Set the bit to enable the clock. */
  73:Generated_Source\PSoC4/Clock_1.c ****     Clock_1_ENABLE_REG |= Clock_1__ENABLE_MASK;
  34              		.loc 1 73 0
  35 0004 044B     		ldr	r3, .L2
  36 0006 044A     		ldr	r2, .L2
  37 0008 1268     		ldr	r2, [r2]
  38 000a 8021     		mov	r1, #128
  39 000c 0906     		lsl	r1, r1, #24
  40 000e 0A43     		orr	r2, r1
  41 0010 1A60     		str	r2, [r3]
ARM GAS  C:\Users\jn\AppData\Local\Temp\ccHhCWs4.s 			page 3


  74:Generated_Source\PSoC4/Clock_1.c **** }
  42              		.loc 1 74 0
  43 0012 BD46     		mov	sp, r7
  44              		@ sp needed
  45 0014 80BD     		pop	{r7, pc}
  46              	.L3:
  47 0016 C046     		.align	2
  48              	.L2:
  49 0018 00010240 		.word	1073873152
  50              		.cfi_endproc
  51              	.LFE0:
  52              		.size	Clock_1_Start, .-Clock_1_Start
  53              		.section	.text.Clock_1_Stop,"ax",%progbits
  54              		.align	2
  55              		.global	Clock_1_Stop
  56              		.code	16
  57              		.thumb_func
  58              		.type	Clock_1_Stop, %function
  59              	Clock_1_Stop:
  60              	.LFB1:
  75:Generated_Source\PSoC4/Clock_1.c **** 
  76:Generated_Source\PSoC4/Clock_1.c **** #endif /* CYREG_PERI_DIV_CMD */
  77:Generated_Source\PSoC4/Clock_1.c **** 
  78:Generated_Source\PSoC4/Clock_1.c **** 
  79:Generated_Source\PSoC4/Clock_1.c **** /*******************************************************************************
  80:Generated_Source\PSoC4/Clock_1.c **** * Function Name: Clock_1_Stop
  81:Generated_Source\PSoC4/Clock_1.c **** ********************************************************************************
  82:Generated_Source\PSoC4/Clock_1.c **** *
  83:Generated_Source\PSoC4/Clock_1.c **** * Summary:
  84:Generated_Source\PSoC4/Clock_1.c **** *  Stops the clock and returns immediately. This API does not require the
  85:Generated_Source\PSoC4/Clock_1.c **** *  source clock to be running but may return before the hardware is actually
  86:Generated_Source\PSoC4/Clock_1.c **** *  disabled.
  87:Generated_Source\PSoC4/Clock_1.c **** *
  88:Generated_Source\PSoC4/Clock_1.c **** * Parameters:
  89:Generated_Source\PSoC4/Clock_1.c **** *  None
  90:Generated_Source\PSoC4/Clock_1.c **** *
  91:Generated_Source\PSoC4/Clock_1.c **** * Returns:
  92:Generated_Source\PSoC4/Clock_1.c **** *  None
  93:Generated_Source\PSoC4/Clock_1.c **** *
  94:Generated_Source\PSoC4/Clock_1.c **** *******************************************************************************/
  95:Generated_Source\PSoC4/Clock_1.c **** void Clock_1_Stop(void)
  96:Generated_Source\PSoC4/Clock_1.c **** {
  61              		.loc 1 96 0
  62              		.cfi_startproc
  63 0000 80B5     		push	{r7, lr}
  64              		.cfi_def_cfa_offset 8
  65              		.cfi_offset 7, -8
  66              		.cfi_offset 14, -4
  67 0002 00AF     		add	r7, sp, #0
  68              		.cfi_def_cfa_register 7
  97:Generated_Source\PSoC4/Clock_1.c **** #if defined CYREG_PERI_DIV_CMD
  98:Generated_Source\PSoC4/Clock_1.c **** 
  99:Generated_Source\PSoC4/Clock_1.c ****     /* Make sure any previous start command has finished. */
 100:Generated_Source\PSoC4/Clock_1.c ****     while((Clock_1_CMD_REG & Clock_1_CMD_ENABLE_MASK) != 0u)
 101:Generated_Source\PSoC4/Clock_1.c ****     {
 102:Generated_Source\PSoC4/Clock_1.c ****     }
 103:Generated_Source\PSoC4/Clock_1.c ****     
ARM GAS  C:\Users\jn\AppData\Local\Temp\ccHhCWs4.s 			page 4


 104:Generated_Source\PSoC4/Clock_1.c ****     /* Specify the target divider and it's alignment divider, and disable. */
 105:Generated_Source\PSoC4/Clock_1.c ****     Clock_1_CMD_REG =
 106:Generated_Source\PSoC4/Clock_1.c ****         ((uint32)Clock_1__DIV_ID << Clock_1_CMD_DIV_SHIFT)|
 107:Generated_Source\PSoC4/Clock_1.c ****         ((uint32)Clock_1_CMD_DISABLE_MASK);
 108:Generated_Source\PSoC4/Clock_1.c **** 
 109:Generated_Source\PSoC4/Clock_1.c **** #else
 110:Generated_Source\PSoC4/Clock_1.c **** 
 111:Generated_Source\PSoC4/Clock_1.c ****     /* Clear the bit to disable the clock. */
 112:Generated_Source\PSoC4/Clock_1.c ****     Clock_1_ENABLE_REG &= (uint32)(~Clock_1__ENABLE_MASK);
  69              		.loc 1 112 0
  70 0004 034B     		ldr	r3, .L5
  71 0006 034A     		ldr	r2, .L5
  72 0008 1268     		ldr	r2, [r2]
  73 000a 5200     		lsl	r2, r2, #1
  74 000c 5208     		lsr	r2, r2, #1
  75 000e 1A60     		str	r2, [r3]
 113:Generated_Source\PSoC4/Clock_1.c ****     
 114:Generated_Source\PSoC4/Clock_1.c **** #endif /* CYREG_PERI_DIV_CMD */
 115:Generated_Source\PSoC4/Clock_1.c **** }
  76              		.loc 1 115 0
  77 0010 BD46     		mov	sp, r7
  78              		@ sp needed
  79 0012 80BD     		pop	{r7, pc}
  80              	.L6:
  81              		.align	2
  82              	.L5:
  83 0014 00010240 		.word	1073873152
  84              		.cfi_endproc
  85              	.LFE1:
  86              		.size	Clock_1_Stop, .-Clock_1_Stop
  87              		.section	.text.Clock_1_SetFractionalDividerRegister,"ax",%progbits
  88              		.align	2
  89              		.global	Clock_1_SetFractionalDividerRegister
  90              		.code	16
  91              		.thumb_func
  92              		.type	Clock_1_SetFractionalDividerRegister, %function
  93              	Clock_1_SetFractionalDividerRegister:
  94              	.LFB2:
 116:Generated_Source\PSoC4/Clock_1.c **** 
 117:Generated_Source\PSoC4/Clock_1.c **** 
 118:Generated_Source\PSoC4/Clock_1.c **** /*******************************************************************************
 119:Generated_Source\PSoC4/Clock_1.c **** * Function Name: Clock_1_SetFractionalDividerRegister
 120:Generated_Source\PSoC4/Clock_1.c **** ********************************************************************************
 121:Generated_Source\PSoC4/Clock_1.c **** *
 122:Generated_Source\PSoC4/Clock_1.c **** * Summary:
 123:Generated_Source\PSoC4/Clock_1.c **** *  Modifies the clock divider and the fractional divider.
 124:Generated_Source\PSoC4/Clock_1.c **** *
 125:Generated_Source\PSoC4/Clock_1.c **** * Parameters:
 126:Generated_Source\PSoC4/Clock_1.c **** *  clkDivider:  Divider register value (0-65535). This value is NOT the
 127:Generated_Source\PSoC4/Clock_1.c **** *    divider; the clock hardware divides by clkDivider plus one. For example,
 128:Generated_Source\PSoC4/Clock_1.c **** *    to divide the clock by 2, this parameter should be set to 1.
 129:Generated_Source\PSoC4/Clock_1.c **** *  fracDivider:  Fractional Divider register value (0-31).
 130:Generated_Source\PSoC4/Clock_1.c **** * Returns:
 131:Generated_Source\PSoC4/Clock_1.c **** *  None
 132:Generated_Source\PSoC4/Clock_1.c **** *
 133:Generated_Source\PSoC4/Clock_1.c **** *******************************************************************************/
 134:Generated_Source\PSoC4/Clock_1.c **** void Clock_1_SetFractionalDividerRegister(uint16 clkDivider, uint8 clkFractional)
ARM GAS  C:\Users\jn\AppData\Local\Temp\ccHhCWs4.s 			page 5


 135:Generated_Source\PSoC4/Clock_1.c **** {
  95              		.loc 1 135 0
  96              		.cfi_startproc
  97 0000 80B5     		push	{r7, lr}
  98              		.cfi_def_cfa_offset 8
  99              		.cfi_offset 7, -8
 100              		.cfi_offset 14, -4
 101 0002 84B0     		sub	sp, sp, #16
 102              		.cfi_def_cfa_offset 24
 103 0004 00AF     		add	r7, sp, #0
 104              		.cfi_def_cfa_register 7
 105 0006 021C     		mov	r2, r0
 106 0008 BB1D     		add	r3, r7, #6
 107 000a 1A80     		strh	r2, [r3]
 108 000c 7B1D     		add	r3, r7, #5
 109 000e 0A1C     		add	r2, r1, #0
 110 0010 1A70     		strb	r2, [r3]
 136:Generated_Source\PSoC4/Clock_1.c ****     uint32 maskVal;
 137:Generated_Source\PSoC4/Clock_1.c ****     uint32 regVal;
 138:Generated_Source\PSoC4/Clock_1.c ****     
 139:Generated_Source\PSoC4/Clock_1.c **** #if defined (Clock_1__FRAC_MASK) || defined (CYREG_PERI_DIV_CMD)
 140:Generated_Source\PSoC4/Clock_1.c ****     
 141:Generated_Source\PSoC4/Clock_1.c **** 	/* get all but divider bits */
 142:Generated_Source\PSoC4/Clock_1.c ****     maskVal = Clock_1_DIV_REG & 
 111              		.loc 1 142 0
 112 0012 0B4B     		ldr	r3, .L8
 113 0014 1B68     		ldr	r3, [r3]
 114 0016 5B0D     		lsr	r3, r3, #21
 115 0018 5B05     		lsl	r3, r3, #21
 116 001a FB60     		str	r3, [r7, #12]
 143:Generated_Source\PSoC4/Clock_1.c ****                     (uint32)(~(uint32)(Clock_1_DIV_INT_MASK | Clock_1_DIV_FRAC_MASK)); 
 144:Generated_Source\PSoC4/Clock_1.c **** 	/* combine mask and new divider vals into 32-bit value */
 145:Generated_Source\PSoC4/Clock_1.c ****     regVal = maskVal |
 146:Generated_Source\PSoC4/Clock_1.c ****         ((uint32)((uint32)clkDivider <<  Clock_1_DIV_INT_SHIFT) & Clock_1_DIV_INT_MASK) |
 117              		.loc 1 146 0
 118 001c BB1D     		add	r3, r7, #6
 119 001e 1A88     		ldrh	r2, [r3]
 145:Generated_Source\PSoC4/Clock_1.c ****         ((uint32)((uint32)clkDivider <<  Clock_1_DIV_INT_SHIFT) & Clock_1_DIV_INT_MASK) |
 120              		.loc 1 145 0
 121 0020 FB68     		ldr	r3, [r7, #12]
 122 0022 1A43     		orr	r2, r3
 147:Generated_Source\PSoC4/Clock_1.c ****         ((uint32)((uint32)clkFractional << Clock_1_DIV_FRAC_SHIFT) & Clock_1_DIV_FRAC_MASK);
 123              		.loc 1 147 0
 124 0024 7B1D     		add	r3, r7, #5
 125 0026 1B78     		ldrb	r3, [r3]
 126 0028 1904     		lsl	r1, r3, #16
 127 002a F823     		mov	r3, #248
 128 002c 5B03     		lsl	r3, r3, #13
 129 002e 0B40     		and	r3, r1
 145:Generated_Source\PSoC4/Clock_1.c ****         ((uint32)((uint32)clkDivider <<  Clock_1_DIV_INT_SHIFT) & Clock_1_DIV_INT_MASK) |
 130              		.loc 1 145 0
 131 0030 1343     		orr	r3, r2
 132 0032 BB60     		str	r3, [r7, #8]
 148:Generated_Source\PSoC4/Clock_1.c ****     
 149:Generated_Source\PSoC4/Clock_1.c **** #else
 150:Generated_Source\PSoC4/Clock_1.c ****     /* get all but integer divider bits */
 151:Generated_Source\PSoC4/Clock_1.c ****     maskVal = Clock_1_DIV_REG & (uint32)(~(uint32)Clock_1__DIVIDER_MASK);
ARM GAS  C:\Users\jn\AppData\Local\Temp\ccHhCWs4.s 			page 6


 152:Generated_Source\PSoC4/Clock_1.c ****     /* combine mask and new divider val into 32-bit value */
 153:Generated_Source\PSoC4/Clock_1.c ****     regVal = clkDivider | maskVal;
 154:Generated_Source\PSoC4/Clock_1.c ****     
 155:Generated_Source\PSoC4/Clock_1.c **** #endif /* Clock_1__FRAC_MASK || CYREG_PERI_DIV_CMD */
 156:Generated_Source\PSoC4/Clock_1.c **** 
 157:Generated_Source\PSoC4/Clock_1.c ****     Clock_1_DIV_REG = regVal;
 133              		.loc 1 157 0
 134 0034 024B     		ldr	r3, .L8
 135 0036 BA68     		ldr	r2, [r7, #8]
 136 0038 1A60     		str	r2, [r3]
 158:Generated_Source\PSoC4/Clock_1.c **** }
 137              		.loc 1 158 0
 138 003a BD46     		mov	sp, r7
 139 003c 04B0     		add	sp, sp, #16
 140              		@ sp needed
 141 003e 80BD     		pop	{r7, pc}
 142              	.L9:
 143              		.align	2
 144              	.L8:
 145 0040 00010240 		.word	1073873152
 146              		.cfi_endproc
 147              	.LFE2:
 148              		.size	Clock_1_SetFractionalDividerRegister, .-Clock_1_SetFractionalDividerRegister
 149              		.section	.text.Clock_1_GetDividerRegister,"ax",%progbits
 150              		.align	2
 151              		.global	Clock_1_GetDividerRegister
 152              		.code	16
 153              		.thumb_func
 154              		.type	Clock_1_GetDividerRegister, %function
 155              	Clock_1_GetDividerRegister:
 156              	.LFB3:
 159:Generated_Source\PSoC4/Clock_1.c **** 
 160:Generated_Source\PSoC4/Clock_1.c **** 
 161:Generated_Source\PSoC4/Clock_1.c **** /*******************************************************************************
 162:Generated_Source\PSoC4/Clock_1.c **** * Function Name: Clock_1_GetDividerRegister
 163:Generated_Source\PSoC4/Clock_1.c **** ********************************************************************************
 164:Generated_Source\PSoC4/Clock_1.c **** *
 165:Generated_Source\PSoC4/Clock_1.c **** * Summary:
 166:Generated_Source\PSoC4/Clock_1.c **** *  Gets the clock divider register value.
 167:Generated_Source\PSoC4/Clock_1.c **** *
 168:Generated_Source\PSoC4/Clock_1.c **** * Parameters:
 169:Generated_Source\PSoC4/Clock_1.c **** *  None
 170:Generated_Source\PSoC4/Clock_1.c **** *
 171:Generated_Source\PSoC4/Clock_1.c **** * Returns:
 172:Generated_Source\PSoC4/Clock_1.c **** *  Divide value of the clock minus 1. For example, if the clock is set to
 173:Generated_Source\PSoC4/Clock_1.c **** *  divide by 2, the return value will be 1.
 174:Generated_Source\PSoC4/Clock_1.c **** *
 175:Generated_Source\PSoC4/Clock_1.c **** *******************************************************************************/
 176:Generated_Source\PSoC4/Clock_1.c **** uint16 Clock_1_GetDividerRegister(void)
 177:Generated_Source\PSoC4/Clock_1.c **** {
 157              		.loc 1 177 0
 158              		.cfi_startproc
 159 0000 80B5     		push	{r7, lr}
 160              		.cfi_def_cfa_offset 8
 161              		.cfi_offset 7, -8
 162              		.cfi_offset 14, -4
 163 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\jn\AppData\Local\Temp\ccHhCWs4.s 			page 7


 164              		.cfi_def_cfa_register 7
 178:Generated_Source\PSoC4/Clock_1.c ****     return (uint16)((Clock_1_DIV_REG & Clock_1_DIV_INT_MASK)
 165              		.loc 1 178 0
 166 0004 024B     		ldr	r3, .L12
 167 0006 1B68     		ldr	r3, [r3]
 168 0008 9BB2     		uxth	r3, r3
 179:Generated_Source\PSoC4/Clock_1.c ****         >> Clock_1_DIV_INT_SHIFT);
 180:Generated_Source\PSoC4/Clock_1.c **** }
 169              		.loc 1 180 0
 170 000a 181C     		mov	r0, r3
 171 000c BD46     		mov	sp, r7
 172              		@ sp needed
 173 000e 80BD     		pop	{r7, pc}
 174              	.L13:
 175              		.align	2
 176              	.L12:
 177 0010 00010240 		.word	1073873152
 178              		.cfi_endproc
 179              	.LFE3:
 180              		.size	Clock_1_GetDividerRegister, .-Clock_1_GetDividerRegister
 181              		.section	.text.Clock_1_GetFractionalDividerRegister,"ax",%progbits
 182              		.align	2
 183              		.global	Clock_1_GetFractionalDividerRegister
 184              		.code	16
 185              		.thumb_func
 186              		.type	Clock_1_GetFractionalDividerRegister, %function
 187              	Clock_1_GetFractionalDividerRegister:
 188              	.LFB4:
 181:Generated_Source\PSoC4/Clock_1.c **** 
 182:Generated_Source\PSoC4/Clock_1.c **** 
 183:Generated_Source\PSoC4/Clock_1.c **** /*******************************************************************************
 184:Generated_Source\PSoC4/Clock_1.c **** * Function Name: Clock_1_GetFractionalDividerRegister
 185:Generated_Source\PSoC4/Clock_1.c **** ********************************************************************************
 186:Generated_Source\PSoC4/Clock_1.c **** *
 187:Generated_Source\PSoC4/Clock_1.c **** * Summary:
 188:Generated_Source\PSoC4/Clock_1.c **** *  Gets the clock fractional divider register value.
 189:Generated_Source\PSoC4/Clock_1.c **** *
 190:Generated_Source\PSoC4/Clock_1.c **** * Parameters:
 191:Generated_Source\PSoC4/Clock_1.c **** *  None
 192:Generated_Source\PSoC4/Clock_1.c **** *
 193:Generated_Source\PSoC4/Clock_1.c **** * Returns:
 194:Generated_Source\PSoC4/Clock_1.c **** *  Fractional Divide value of the clock
 195:Generated_Source\PSoC4/Clock_1.c **** *  0 if the fractional divider is not in use.
 196:Generated_Source\PSoC4/Clock_1.c **** *
 197:Generated_Source\PSoC4/Clock_1.c **** *******************************************************************************/
 198:Generated_Source\PSoC4/Clock_1.c **** uint8 Clock_1_GetFractionalDividerRegister(void)
 199:Generated_Source\PSoC4/Clock_1.c **** {
 189              		.loc 1 199 0
 190              		.cfi_startproc
 191 0000 80B5     		push	{r7, lr}
 192              		.cfi_def_cfa_offset 8
 193              		.cfi_offset 7, -8
 194              		.cfi_offset 14, -4
 195 0002 00AF     		add	r7, sp, #0
 196              		.cfi_def_cfa_register 7
 200:Generated_Source\PSoC4/Clock_1.c **** #if defined (Clock_1__FRAC_MASK)
 201:Generated_Source\PSoC4/Clock_1.c ****     /* return fractional divider bits */
ARM GAS  C:\Users\jn\AppData\Local\Temp\ccHhCWs4.s 			page 8


 202:Generated_Source\PSoC4/Clock_1.c ****     return (uint8)((Clock_1_DIV_REG & Clock_1_DIV_FRAC_MASK)
 197              		.loc 1 202 0
 198 0004 044B     		ldr	r3, .L16
 199 0006 1A68     		ldr	r2, [r3]
 200 0008 F823     		mov	r3, #248
 201 000a 5B03     		lsl	r3, r3, #13
 202 000c 1340     		and	r3, r2
 203:Generated_Source\PSoC4/Clock_1.c ****         >> Clock_1_DIV_FRAC_SHIFT);
 203              		.loc 1 203 0
 204 000e 1B0C     		lsr	r3, r3, #16
 202:Generated_Source\PSoC4/Clock_1.c ****         >> Clock_1_DIV_FRAC_SHIFT);
 205              		.loc 1 202 0
 206 0010 DBB2     		uxtb	r3, r3
 204:Generated_Source\PSoC4/Clock_1.c **** #else
 205:Generated_Source\PSoC4/Clock_1.c ****     return 0u;
 206:Generated_Source\PSoC4/Clock_1.c **** #endif /* Clock_1__FRAC_MASK */
 207:Generated_Source\PSoC4/Clock_1.c **** }
 207              		.loc 1 207 0
 208 0012 181C     		mov	r0, r3
 209 0014 BD46     		mov	sp, r7
 210              		@ sp needed
 211 0016 80BD     		pop	{r7, pc}
 212              	.L17:
 213              		.align	2
 214              	.L16:
 215 0018 00010240 		.word	1073873152
 216              		.cfi_endproc
 217              	.LFE4:
 218              		.size	Clock_1_GetFractionalDividerRegister, .-Clock_1_GetFractionalDividerRegister
 219              		.text
 220              	.Letext0:
 221              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 222              		.section	.debug_info,"",%progbits
 223              	.Ldebug_info0:
 224 0000 4C010000 		.4byte	0x14c
 225 0004 0400     		.2byte	0x4
 226 0006 00000000 		.4byte	.Ldebug_abbrev0
 227 000a 04       		.byte	0x4
 228 000b 01       		.uleb128 0x1
 229 000c D0000000 		.4byte	.LASF24
 230 0010 01       		.byte	0x1
 231 0011 06020000 		.4byte	.LASF25
 232 0015 00000000 		.4byte	.LASF26
 233 0019 00000000 		.4byte	.Ldebug_ranges0+0
 234 001d 00000000 		.4byte	0
 235 0021 00000000 		.4byte	.Ldebug_line0
 236 0025 02       		.uleb128 0x2
 237 0026 01       		.byte	0x1
 238 0027 06       		.byte	0x6
 239 0028 27020000 		.4byte	.LASF0
 240 002c 02       		.uleb128 0x2
 241 002d 01       		.byte	0x1
 242 002e 08       		.byte	0x8
 243 002f 68000000 		.4byte	.LASF1
 244 0033 02       		.uleb128 0x2
 245 0034 02       		.byte	0x2
 246 0035 05       		.byte	0x5
ARM GAS  C:\Users\jn\AppData\Local\Temp\ccHhCWs4.s 			page 9


 247 0036 C8010000 		.4byte	.LASF2
 248 003a 02       		.uleb128 0x2
 249 003b 02       		.byte	0x2
 250 003c 07       		.byte	0x7
 251 003d 96000000 		.4byte	.LASF3
 252 0041 02       		.uleb128 0x2
 253 0042 04       		.byte	0x4
 254 0043 05       		.byte	0x5
 255 0044 FD010000 		.4byte	.LASF4
 256 0048 02       		.uleb128 0x2
 257 0049 04       		.byte	0x4
 258 004a 07       		.byte	0x7
 259 004b 84000000 		.4byte	.LASF5
 260 004f 02       		.uleb128 0x2
 261 0050 08       		.byte	0x8
 262 0051 05       		.byte	0x5
 263 0052 B5010000 		.4byte	.LASF6
 264 0056 02       		.uleb128 0x2
 265 0057 08       		.byte	0x8
 266 0058 07       		.byte	0x7
 267 0059 79010000 		.4byte	.LASF7
 268 005d 03       		.uleb128 0x3
 269 005e 04       		.byte	0x4
 270 005f 05       		.byte	0x5
 271 0060 696E7400 		.ascii	"int\000"
 272 0064 02       		.uleb128 0x2
 273 0065 04       		.byte	0x4
 274 0066 07       		.byte	0x7
 275 0067 6C010000 		.4byte	.LASF8
 276 006b 04       		.uleb128 0x4
 277 006c D2010000 		.4byte	.LASF9
 278 0070 02       		.byte	0x2
 279 0071 B901     		.2byte	0x1b9
 280 0073 2C000000 		.4byte	0x2c
 281 0077 04       		.uleb128 0x4
 282 0078 5E010000 		.4byte	.LASF10
 283 007c 02       		.byte	0x2
 284 007d BA01     		.2byte	0x1ba
 285 007f 3A000000 		.4byte	0x3a
 286 0083 04       		.uleb128 0x4
 287 0084 65010000 		.4byte	.LASF11
 288 0088 02       		.byte	0x2
 289 0089 BB01     		.2byte	0x1bb
 290 008b 48000000 		.4byte	0x48
 291 008f 02       		.uleb128 0x2
 292 0090 04       		.byte	0x4
 293 0091 04       		.byte	0x4
 294 0092 55000000 		.4byte	.LASF12
 295 0096 02       		.uleb128 0x2
 296 0097 08       		.byte	0x8
 297 0098 04       		.byte	0x4
 298 0099 B4000000 		.4byte	.LASF13
 299 009d 02       		.uleb128 0x2
 300 009e 01       		.byte	0x1
 301 009f 08       		.byte	0x8
 302 00a0 C3010000 		.4byte	.LASF14
 303 00a4 04       		.uleb128 0x4
ARM GAS  C:\Users\jn\AppData\Local\Temp\ccHhCWs4.s 			page 10


 304 00a5 47000000 		.4byte	.LASF15
 305 00a9 02       		.byte	0x2
 306 00aa 6502     		.2byte	0x265
 307 00ac B0000000 		.4byte	0xb0
 308 00b0 05       		.uleb128 0x5
 309 00b1 83000000 		.4byte	0x83
 310 00b5 06       		.uleb128 0x6
 311 00b6 76000000 		.4byte	.LASF16
 312 00ba 01       		.byte	0x1
 313 00bb 46       		.byte	0x46
 314 00bc 00000000 		.4byte	.LFB0
 315 00c0 1C000000 		.4byte	.LFE0-.LFB0
 316 00c4 01       		.uleb128 0x1
 317 00c5 9C       		.byte	0x9c
 318 00c6 06       		.uleb128 0x6
 319 00c7 5B000000 		.4byte	.LASF17
 320 00cb 01       		.byte	0x1
 321 00cc 5F       		.byte	0x5f
 322 00cd 00000000 		.4byte	.LFB1
 323 00d1 18000000 		.4byte	.LFE1-.LFB1
 324 00d5 01       		.uleb128 0x1
 325 00d6 9C       		.byte	0x9c
 326 00d7 07       		.uleb128 0x7
 327 00d8 D8010000 		.4byte	.LASF27
 328 00dc 01       		.byte	0x1
 329 00dd 86       		.byte	0x86
 330 00de 00000000 		.4byte	.LFB2
 331 00e2 44000000 		.4byte	.LFE2-.LFB2
 332 00e6 01       		.uleb128 0x1
 333 00e7 9C       		.byte	0x9c
 334 00e8 25010000 		.4byte	0x125
 335 00ec 08       		.uleb128 0x8
 336 00ed A9000000 		.4byte	.LASF18
 337 00f1 01       		.byte	0x1
 338 00f2 86       		.byte	0x86
 339 00f3 77000000 		.4byte	0x77
 340 00f7 02       		.uleb128 0x2
 341 00f8 91       		.byte	0x91
 342 00f9 6E       		.sleb128 -18
 343 00fa 08       		.uleb128 0x8
 344 00fb C2000000 		.4byte	.LASF19
 345 00ff 01       		.byte	0x1
 346 0100 86       		.byte	0x86
 347 0101 6B000000 		.4byte	0x6b
 348 0105 02       		.uleb128 0x2
 349 0106 91       		.byte	0x91
 350 0107 6D       		.sleb128 -19
 351 0108 09       		.uleb128 0x9
 352 0109 4D000000 		.4byte	.LASF20
 353 010d 01       		.byte	0x1
 354 010e 88       		.byte	0x88
 355 010f 83000000 		.4byte	0x83
 356 0113 02       		.uleb128 0x2
 357 0114 91       		.byte	0x91
 358 0115 74       		.sleb128 -12
 359 0116 09       		.uleb128 0x9
 360 0117 BB000000 		.4byte	.LASF21
ARM GAS  C:\Users\jn\AppData\Local\Temp\ccHhCWs4.s 			page 11


 361 011b 01       		.byte	0x1
 362 011c 89       		.byte	0x89
 363 011d 83000000 		.4byte	0x83
 364 0121 02       		.uleb128 0x2
 365 0122 91       		.byte	0x91
 366 0123 70       		.sleb128 -16
 367 0124 00       		.byte	0
 368 0125 0A       		.uleb128 0xa
 369 0126 33020000 		.4byte	.LASF22
 370 012a 01       		.byte	0x1
 371 012b B0       		.byte	0xb0
 372 012c 77000000 		.4byte	0x77
 373 0130 00000000 		.4byte	.LFB3
 374 0134 14000000 		.4byte	.LFE3-.LFB3
 375 0138 01       		.uleb128 0x1
 376 0139 9C       		.byte	0x9c
 377 013a 0A       		.uleb128 0xa
 378 013b 90010000 		.4byte	.LASF23
 379 013f 01       		.byte	0x1
 380 0140 C6       		.byte	0xc6
 381 0141 6B000000 		.4byte	0x6b
 382 0145 00000000 		.4byte	.LFB4
 383 0149 1C000000 		.4byte	.LFE4-.LFB4
 384 014d 01       		.uleb128 0x1
 385 014e 9C       		.byte	0x9c
 386 014f 00       		.byte	0
 387              		.section	.debug_abbrev,"",%progbits
 388              	.Ldebug_abbrev0:
 389 0000 01       		.uleb128 0x1
 390 0001 11       		.uleb128 0x11
 391 0002 01       		.byte	0x1
 392 0003 25       		.uleb128 0x25
 393 0004 0E       		.uleb128 0xe
 394 0005 13       		.uleb128 0x13
 395 0006 0B       		.uleb128 0xb
 396 0007 03       		.uleb128 0x3
 397 0008 0E       		.uleb128 0xe
 398 0009 1B       		.uleb128 0x1b
 399 000a 0E       		.uleb128 0xe
 400 000b 55       		.uleb128 0x55
 401 000c 17       		.uleb128 0x17
 402 000d 11       		.uleb128 0x11
 403 000e 01       		.uleb128 0x1
 404 000f 10       		.uleb128 0x10
 405 0010 17       		.uleb128 0x17
 406 0011 00       		.byte	0
 407 0012 00       		.byte	0
 408 0013 02       		.uleb128 0x2
 409 0014 24       		.uleb128 0x24
 410 0015 00       		.byte	0
 411 0016 0B       		.uleb128 0xb
 412 0017 0B       		.uleb128 0xb
 413 0018 3E       		.uleb128 0x3e
 414 0019 0B       		.uleb128 0xb
 415 001a 03       		.uleb128 0x3
 416 001b 0E       		.uleb128 0xe
 417 001c 00       		.byte	0
ARM GAS  C:\Users\jn\AppData\Local\Temp\ccHhCWs4.s 			page 12


 418 001d 00       		.byte	0
 419 001e 03       		.uleb128 0x3
 420 001f 24       		.uleb128 0x24
 421 0020 00       		.byte	0
 422 0021 0B       		.uleb128 0xb
 423 0022 0B       		.uleb128 0xb
 424 0023 3E       		.uleb128 0x3e
 425 0024 0B       		.uleb128 0xb
 426 0025 03       		.uleb128 0x3
 427 0026 08       		.uleb128 0x8
 428 0027 00       		.byte	0
 429 0028 00       		.byte	0
 430 0029 04       		.uleb128 0x4
 431 002a 16       		.uleb128 0x16
 432 002b 00       		.byte	0
 433 002c 03       		.uleb128 0x3
 434 002d 0E       		.uleb128 0xe
 435 002e 3A       		.uleb128 0x3a
 436 002f 0B       		.uleb128 0xb
 437 0030 3B       		.uleb128 0x3b
 438 0031 05       		.uleb128 0x5
 439 0032 49       		.uleb128 0x49
 440 0033 13       		.uleb128 0x13
 441 0034 00       		.byte	0
 442 0035 00       		.byte	0
 443 0036 05       		.uleb128 0x5
 444 0037 35       		.uleb128 0x35
 445 0038 00       		.byte	0
 446 0039 49       		.uleb128 0x49
 447 003a 13       		.uleb128 0x13
 448 003b 00       		.byte	0
 449 003c 00       		.byte	0
 450 003d 06       		.uleb128 0x6
 451 003e 2E       		.uleb128 0x2e
 452 003f 00       		.byte	0
 453 0040 3F       		.uleb128 0x3f
 454 0041 19       		.uleb128 0x19
 455 0042 03       		.uleb128 0x3
 456 0043 0E       		.uleb128 0xe
 457 0044 3A       		.uleb128 0x3a
 458 0045 0B       		.uleb128 0xb
 459 0046 3B       		.uleb128 0x3b
 460 0047 0B       		.uleb128 0xb
 461 0048 27       		.uleb128 0x27
 462 0049 19       		.uleb128 0x19
 463 004a 11       		.uleb128 0x11
 464 004b 01       		.uleb128 0x1
 465 004c 12       		.uleb128 0x12
 466 004d 06       		.uleb128 0x6
 467 004e 40       		.uleb128 0x40
 468 004f 18       		.uleb128 0x18
 469 0050 9742     		.uleb128 0x2117
 470 0052 19       		.uleb128 0x19
 471 0053 00       		.byte	0
 472 0054 00       		.byte	0
 473 0055 07       		.uleb128 0x7
 474 0056 2E       		.uleb128 0x2e
ARM GAS  C:\Users\jn\AppData\Local\Temp\ccHhCWs4.s 			page 13


 475 0057 01       		.byte	0x1
 476 0058 3F       		.uleb128 0x3f
 477 0059 19       		.uleb128 0x19
 478 005a 03       		.uleb128 0x3
 479 005b 0E       		.uleb128 0xe
 480 005c 3A       		.uleb128 0x3a
 481 005d 0B       		.uleb128 0xb
 482 005e 3B       		.uleb128 0x3b
 483 005f 0B       		.uleb128 0xb
 484 0060 27       		.uleb128 0x27
 485 0061 19       		.uleb128 0x19
 486 0062 11       		.uleb128 0x11
 487 0063 01       		.uleb128 0x1
 488 0064 12       		.uleb128 0x12
 489 0065 06       		.uleb128 0x6
 490 0066 40       		.uleb128 0x40
 491 0067 18       		.uleb128 0x18
 492 0068 9742     		.uleb128 0x2117
 493 006a 19       		.uleb128 0x19
 494 006b 01       		.uleb128 0x1
 495 006c 13       		.uleb128 0x13
 496 006d 00       		.byte	0
 497 006e 00       		.byte	0
 498 006f 08       		.uleb128 0x8
 499 0070 05       		.uleb128 0x5
 500 0071 00       		.byte	0
 501 0072 03       		.uleb128 0x3
 502 0073 0E       		.uleb128 0xe
 503 0074 3A       		.uleb128 0x3a
 504 0075 0B       		.uleb128 0xb
 505 0076 3B       		.uleb128 0x3b
 506 0077 0B       		.uleb128 0xb
 507 0078 49       		.uleb128 0x49
 508 0079 13       		.uleb128 0x13
 509 007a 02       		.uleb128 0x2
 510 007b 18       		.uleb128 0x18
 511 007c 00       		.byte	0
 512 007d 00       		.byte	0
 513 007e 09       		.uleb128 0x9
 514 007f 34       		.uleb128 0x34
 515 0080 00       		.byte	0
 516 0081 03       		.uleb128 0x3
 517 0082 0E       		.uleb128 0xe
 518 0083 3A       		.uleb128 0x3a
 519 0084 0B       		.uleb128 0xb
 520 0085 3B       		.uleb128 0x3b
 521 0086 0B       		.uleb128 0xb
 522 0087 49       		.uleb128 0x49
 523 0088 13       		.uleb128 0x13
 524 0089 02       		.uleb128 0x2
 525 008a 18       		.uleb128 0x18
 526 008b 00       		.byte	0
 527 008c 00       		.byte	0
 528 008d 0A       		.uleb128 0xa
 529 008e 2E       		.uleb128 0x2e
 530 008f 00       		.byte	0
 531 0090 3F       		.uleb128 0x3f
ARM GAS  C:\Users\jn\AppData\Local\Temp\ccHhCWs4.s 			page 14


 532 0091 19       		.uleb128 0x19
 533 0092 03       		.uleb128 0x3
 534 0093 0E       		.uleb128 0xe
 535 0094 3A       		.uleb128 0x3a
 536 0095 0B       		.uleb128 0xb
 537 0096 3B       		.uleb128 0x3b
 538 0097 0B       		.uleb128 0xb
 539 0098 27       		.uleb128 0x27
 540 0099 19       		.uleb128 0x19
 541 009a 49       		.uleb128 0x49
 542 009b 13       		.uleb128 0x13
 543 009c 11       		.uleb128 0x11
 544 009d 01       		.uleb128 0x1
 545 009e 12       		.uleb128 0x12
 546 009f 06       		.uleb128 0x6
 547 00a0 40       		.uleb128 0x40
 548 00a1 18       		.uleb128 0x18
 549 00a2 9742     		.uleb128 0x2117
 550 00a4 19       		.uleb128 0x19
 551 00a5 00       		.byte	0
 552 00a6 00       		.byte	0
 553 00a7 00       		.byte	0
 554              		.section	.debug_aranges,"",%progbits
 555 0000 3C000000 		.4byte	0x3c
 556 0004 0200     		.2byte	0x2
 557 0006 00000000 		.4byte	.Ldebug_info0
 558 000a 04       		.byte	0x4
 559 000b 00       		.byte	0
 560 000c 0000     		.2byte	0
 561 000e 0000     		.2byte	0
 562 0010 00000000 		.4byte	.LFB0
 563 0014 1C000000 		.4byte	.LFE0-.LFB0
 564 0018 00000000 		.4byte	.LFB1
 565 001c 18000000 		.4byte	.LFE1-.LFB1
 566 0020 00000000 		.4byte	.LFB2
 567 0024 44000000 		.4byte	.LFE2-.LFB2
 568 0028 00000000 		.4byte	.LFB3
 569 002c 14000000 		.4byte	.LFE3-.LFB3
 570 0030 00000000 		.4byte	.LFB4
 571 0034 1C000000 		.4byte	.LFE4-.LFB4
 572 0038 00000000 		.4byte	0
 573 003c 00000000 		.4byte	0
 574              		.section	.debug_ranges,"",%progbits
 575              	.Ldebug_ranges0:
 576 0000 00000000 		.4byte	.LFB0
 577 0004 1C000000 		.4byte	.LFE0
 578 0008 00000000 		.4byte	.LFB1
 579 000c 18000000 		.4byte	.LFE1
 580 0010 00000000 		.4byte	.LFB2
 581 0014 44000000 		.4byte	.LFE2
 582 0018 00000000 		.4byte	.LFB3
 583 001c 14000000 		.4byte	.LFE3
 584 0020 00000000 		.4byte	.LFB4
 585 0024 1C000000 		.4byte	.LFE4
 586 0028 00000000 		.4byte	0
 587 002c 00000000 		.4byte	0
 588              		.section	.debug_line,"",%progbits
ARM GAS  C:\Users\jn\AppData\Local\Temp\ccHhCWs4.s 			page 15


 589              	.Ldebug_line0:
 590 0000 AF000000 		.section	.debug_str,"MS",%progbits,1
 590      02004400 
 590      00000201 
 590      FB0E0D00 
 590      01010101 
 591              	.LASF26:
 592 0000 5A3A5C45 		.ascii	"Z:\\Electronics Win7\\PSoC projects\\FV-1 Controlle"
 592      6C656374 
 592      726F6E69 
 592      63732057 
 592      696E375C 
 593 0030 725C6676 		.ascii	"r\\fv1_controller.cydsn\000"
 593      315F636F 
 593      6E74726F 
 593      6C6C6572 
 593      2E637964 
 594              	.LASF15:
 595 0047 72656733 		.ascii	"reg32\000"
 595      3200
 596              	.LASF20:
 597 004d 6D61736B 		.ascii	"maskVal\000"
 597      56616C00 
 598              	.LASF12:
 599 0055 666C6F61 		.ascii	"float\000"
 599      7400
 600              	.LASF17:
 601 005b 436C6F63 		.ascii	"Clock_1_Stop\000"
 601      6B5F315F 
 601      53746F70 
 601      00
 602              	.LASF1:
 603 0068 756E7369 		.ascii	"unsigned char\000"
 603      676E6564 
 603      20636861 
 603      7200
 604              	.LASF16:
 605 0076 436C6F63 		.ascii	"Clock_1_Start\000"
 605      6B5F315F 
 605      53746172 
 605      7400
 606              	.LASF5:
 607 0084 6C6F6E67 		.ascii	"long unsigned int\000"
 607      20756E73 
 607      69676E65 
 607      6420696E 
 607      7400
 608              	.LASF3:
 609 0096 73686F72 		.ascii	"short unsigned int\000"
 609      7420756E 
 609      7369676E 
 609      65642069 
 609      6E7400
 610              	.LASF18:
 611 00a9 636C6B44 		.ascii	"clkDivider\000"
 611      69766964 
 611      657200
ARM GAS  C:\Users\jn\AppData\Local\Temp\ccHhCWs4.s 			page 16


 612              	.LASF13:
 613 00b4 646F7562 		.ascii	"double\000"
 613      6C6500
 614              	.LASF21:
 615 00bb 72656756 		.ascii	"regVal\000"
 615      616C00
 616              	.LASF19:
 617 00c2 636C6B46 		.ascii	"clkFractional\000"
 617      72616374 
 617      696F6E61 
 617      6C00
 618              	.LASF24:
 619 00d0 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 619      4320342E 
 619      392E3320 
 619      32303135 
 619      30333033 
 620 0103 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 620      20726576 
 620      6973696F 
 620      6E203232 
 620      31323230 
 621 0136 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 621      66756E63 
 621      74696F6E 
 621      2D736563 
 621      74696F6E 
 622              	.LASF10:
 623 015e 75696E74 		.ascii	"uint16\000"
 623      313600
 624              	.LASF11:
 625 0165 75696E74 		.ascii	"uint32\000"
 625      333200
 626              	.LASF8:
 627 016c 756E7369 		.ascii	"unsigned int\000"
 627      676E6564 
 627      20696E74 
 627      00
 628              	.LASF7:
 629 0179 6C6F6E67 		.ascii	"long long unsigned int\000"
 629      206C6F6E 
 629      6720756E 
 629      7369676E 
 629      65642069 
 630              	.LASF23:
 631 0190 436C6F63 		.ascii	"Clock_1_GetFractionalDividerRegister\000"
 631      6B5F315F 
 631      47657446 
 631      72616374 
 631      696F6E61 
 632              	.LASF6:
 633 01b5 6C6F6E67 		.ascii	"long long int\000"
 633      206C6F6E 
 633      6720696E 
 633      7400
 634              	.LASF14:
 635 01c3 63686172 		.ascii	"char\000"
ARM GAS  C:\Users\jn\AppData\Local\Temp\ccHhCWs4.s 			page 17


 635      00
 636              	.LASF2:
 637 01c8 73686F72 		.ascii	"short int\000"
 637      7420696E 
 637      7400
 638              	.LASF9:
 639 01d2 75696E74 		.ascii	"uint8\000"
 639      3800
 640              	.LASF27:
 641 01d8 436C6F63 		.ascii	"Clock_1_SetFractionalDividerRegister\000"
 641      6B5F315F 
 641      53657446 
 641      72616374 
 641      696F6E61 
 642              	.LASF4:
 643 01fd 6C6F6E67 		.ascii	"long int\000"
 643      20696E74 
 643      00
 644              	.LASF25:
 645 0206 47656E65 		.ascii	"Generated_Source\\PSoC4\\Clock_1.c\000"
 645      72617465 
 645      645F536F 
 645      75726365 
 645      5C50536F 
 646              	.LASF0:
 647 0227 7369676E 		.ascii	"signed char\000"
 647      65642063 
 647      68617200 
 648              	.LASF22:
 649 0233 436C6F63 		.ascii	"Clock_1_GetDividerRegister\000"
 649      6B5F315F 
 649      47657444 
 649      69766964 
 649      65725265 
 650              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
